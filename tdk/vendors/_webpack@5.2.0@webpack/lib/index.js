/* This file has 85 compiler error(s) */
!function() {
	var div = document.getElementById("doc_compile_error") || document.body.appendChild(document.createElement("div"));
	div.id = "doc_compile_error";
	div.style.cssText = 'position: fixed;\ntop: 0;\nleft: 0;\nbottom: 0;\nright: 0;\noverflow: auto;\nz-index: 65535;\nbox-sizing: border-box;\nbackground: rgba(0, 0, 0, .75);\npadding: 2rem;\nfont-family: Monaco, Menlo, Consolas, "Courier New", "Helvetica Neue", Helvetica, "Hiragino Sans GB", "Microsoft Yahei", monospace;\nfont-size: 1rem;\nwhite-space: pre-wrap;\ncolor: #ffffff;';
	div.innerHTML = "<button style=\"-webkit-appearance: none;\nfloat: right;\nmargin: 0;\nborder: 0;\npadding: .25em 0;\nbackground: transparent;\noutline: 0;\nwidth: 1em;\ncolor: #e0e0e0;\nfont-size: 1em;\nline-height: 1em;\" onclick=\"this.parentNode.parentNode.removeChild(this.parentNode)\" title=\"关闭\">✖</button><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'stream' in 'D:\\项目\\TDK\\node_modules\\_chrome-trace-event@1.0.2@chrome-trace-event\\dist'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"stream\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'pnpapi' in 'D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\util'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'assert' in 'D:\\项目\\TDK\\node_modules\\_eslint-scope@5.1.1@eslint-scope\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"assert\": require.resolve(\"assert/\") }'\n\t- install 'assert'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"assert\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'assert' in 'D:\\项目\\TDK\\node_modules\\_eslint-scope@5.1.1@eslint-scope\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"assert\": require.resolve(\"assert/\") }'\n\t- install 'assert'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"assert\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'assert' in 'D:\\项目\\TDK\\node_modules\\_eslint-scope@5.1.1@eslint-scope\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"assert\": require.resolve(\"assert/\") }'\n\t- install 'assert'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"assert\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'assert' in 'D:\\项目\\TDK\\node_modules\\_eslint-scope@5.1.1@eslint-scope\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"assert\": require.resolve(\"assert/\") }'\n\t- install 'assert'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"assert\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_find-up@4.1.0@find-up'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_graceful-fs@4.2.4@graceful-fs'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_graceful-fs@4.2.4@graceful-fs'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'assert' in 'D:\\项目\\TDK\\node_modules\\_graceful-fs@4.2.4@graceful-fs'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"assert\": require.resolve(\"assert/\") }'\n\t- install 'assert'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"assert\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'stream' in 'D:\\项目\\TDK\\node_modules\\_graceful-fs@4.2.4@graceful-fs'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"stream\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'constants' in 'D:\\项目\\TDK\\node_modules\\_graceful-fs@4.2.4@graceful-fs'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"constants\": require.resolve(\"constants-browserify\") }'\n\t- install 'constants-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"constants\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_jest-worker@26.6.1@jest-worker\\build\\base'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'os' in 'D:\\项目\\TDK\\node_modules\\_jest-worker@26.6.1@jest-worker\\build'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"os\": require.resolve(\"os-browserify/browser\") }'\n\t- install 'os-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"os\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'child_process' in 'D:\\项目\\TDK\\node_modules\\_jest-worker@26.6.1@jest-worker\\build\\workers'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'stream' in 'D:\\项目\\TDK\\node_modules\\_jest-worker@26.6.1@jest-worker\\build\\workers'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"stream\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_jest-worker@26.6.1@jest-worker\\build\\workers'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'stream' in 'D:\\项目\\TDK\\node_modules\\_jest-worker@26.6.1@jest-worker\\build\\workers'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"stream\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'worker_threads' in 'D:\\项目\\TDK\\node_modules\\_jest-worker@26.6.1@jest-worker\\build\\workers'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_loader-runner@4.1.0@loader-runner\\lib'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_locate-path@5.0.0@locate-path'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_locate-path@5.0.0@locate-path'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_locate-path@5.0.0@locate-path'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'stream' in 'D:\\项目\\TDK\\node_modules\\_merge-stream@2.0.0@merge-stream'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"stream\": require.resolve(\"stream-browserify\") }'\n\t- install 'stream-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"stream\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_mime-types@2.1.27@mime-types'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_path-exists@4.0.0@path-exists'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_path-exists@4.0.0@path-exists'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_pkg-dir@4.2.0@pkg-dir'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'buffer' in 'D:\\项目\\TDK\\node_modules\\_safe-buffer@5.2.1@safe-buffer'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"buffer\": require.resolve(\"buffer/\") }'\n\t- install 'buffer'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"buffer\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_source-map@0.7.3@source-map\\lib'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_source-map@0.7.3@source-map\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_terser-webpack-plugin@5.0.1@terser-webpack-plugin\\dist'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'os' in 'D:\\项目\\TDK\\node_modules\\_terser-webpack-plugin@5.0.1@terser-webpack-plugin\\dist'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"os\": require.resolve(\"os-browserify/browser\") }'\n\t- install 'os-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"os\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'os' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"os\": require.resolve(\"os-browserify/browser\") }'\n\t- install 'os-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"os\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'fs' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'os' in 'D:\\项目\\TDK\\node_modules\\_watchpack@2.0.0@watchpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"os\": require.resolve(\"os-browserify/browser\") }'\n\t- install 'os-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"os\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'querystring' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"querystring\": require.resolve(\"querystring-es3\") }'\n\t- install 'querystring-es3'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"querystring\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\asset'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\config'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\config'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\config'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'url' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\dependencies'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"url\": require.resolve(\"url/\") }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"url\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'url' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\dependencies'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"url\": require.resolve(\"url/\") }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"url\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\javascript'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'vm' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\javascript'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"vm\": require.resolve(\"vm-browserify\") }'\n\t- install 'vm-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"vm\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\node'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\rules'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'url' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\schemes'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"url\": require.resolve(\"url/\") }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"url\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'url' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\schemes'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"url\": require.resolve(\"url/\") }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"url\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'http' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\schemes'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"http\": require.resolve(\"stream-http\") }'\n\t- install 'stream-http'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"http\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'url' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\schemes'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"url\": require.resolve(\"url/\") }'\n\t- install 'url'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"url\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'https' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\schemes'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"https\": require.resolve(\"https-browserify\") }'\n\t- install 'https-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"https\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\stats'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'crypto' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\util'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"crypto\": require.resolve(\"crypto-browserify\") }'\n\t- install 'crypto-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"crypto\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\util'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\util'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'path' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\util'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"path\": require.resolve(\"path-browserify\") }'\n\t- install 'path-browserify'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"path\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div><div style=\"margin-bottom: 2em\"><span style=\"color: red\">✘ </span><span style=\"font-weight: bold\">node_modules/_webpack@5.2.0@webpack/lib/index.js</span><span style=\"color: #ccc\">: </span>Module not found: Error: Can't resolve 'util' in 'D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib'\n\nBREAKING CHANGE: webpack &lt; 5 used to include polyfills for node.js core modules by default.\nThis is no longer the case. Verify if you need this module and configure a polyfill for it.\n\nIf you want to include a polyfill, you need to:\n\t- add a fallback 'resolve.fallback: { \"util\": require.resolve(\"util/\") }'\n\t- install 'util'\nIf you don't want to include a polyfill, you can use an empty module like this:\n\tresolve.fallback: { \"util\": false }\n\n<span style=\"color: #ccc\">    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\Compilation.js:1478:28\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:648:13\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:10:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:233:22\n    at eval (eval at create (D:\\项目\\TDK\\node_modules\\_tapable@2.0.0@tapable\\lib\\HookCodeFactory.js:33:10), &lt;anonymous&gt;:9:1)\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:357:22\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:116:11\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:577:24\n    at D:\\项目\\TDK\\node_modules\\_webpack@5.2.0@webpack\\lib\\NormalModuleFactory.js:721:5\n    at finishWithoutResolve (D:\\项目\\TDK\\node_modules\\_enhanced-resolve@5.3.1@enhanced-resolve\\lib\\Resolver.js:296:11)</span>\n</div>";
}();