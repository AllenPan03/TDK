{"version":3,"file":"require.js","sourceRoot":"","sources":["../assets/require.js"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @fileoverview require.js - A light-weight AMD loader\r\n * @author xuld<xuld@xuld.net>\r\n * @license MIT\r\n */\r\n\r\n/**\r\n * 加载指定的模块及其依赖，如果模块已加载则直接返回\r\n * @param {string | string[]} name 要加载的模块名\r\n * @param {Function} [callback] 模块加载成功后的回调函数，参数为模块的导出对象\r\n * @param {Function} [onError] 模块加载失败后的回调函数\r\n * @param {string} [baseURL] 解析模块地址时使用的基地址\r\n * @returns 如果模块已加载，则返回模块的导出项\r\n */\r\nfunction require(name, callback, onError, baseURL) {\r\n\tconst dependencies = typeof name === \"string\" ? [name] : name.slice(0)\r\n\tconst entryModule = {\r\n\t\tstate: 2 /* fetched */,\r\n\t\tdependencies,\r\n\t\texports: {},\r\n\t\tdefine: callback,\r\n\t\tonError: onError\r\n\t}\r\n\tlet last = require._entryModule\r\n\tif (last) {\r\n\t\twhile (last.next) {\r\n\t\t\tlast = last.next\r\n\t\t}\r\n\t\tlast.next = entryModule\r\n\t} else {\r\n\t\trequire._entryModule = entryModule\r\n\t}\r\n\trequire._ensure(entryModule, baseURL)\r\n\treturn entryModule.state < 4 /* executed */ ? undefined : typeof name === \"string\" ? dependencies[0] : dependencies\r\n}\r\n\r\n/** 获取所有已加载的模块 */\r\nrequire.cache = { __proto__: null }\r\n\r\n/** 确保指定模块及其依赖都已加载 */\r\nrequire._ensure = (module, baseURL) => {\r\n\tif (module.state !== 2 /* fetched */) {\r\n\t\treturn\r\n\t}\r\n\tmodule.state = 3 /* resolved */\r\n\tconst { dependencies } = module\r\n\tif (dependencies) {\r\n\t\tfor (let i = 0; i < dependencies.length; i++) {\r\n\t\t\tlet dependencyModule\r\n\t\t\tconst dependencyName = dependencies[i]\r\n\t\t\tswitch (dependencyName) {\r\n\t\t\t\tcase \"exports\":\r\n\t\t\t\t\tdependencyModule = module\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase \"require\":\r\n\t\t\t\t\tdependencyModule = { state: 4 /* executed */, exports: (name, callback) => require(name, callback, baseURL) }\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase \"module\":\r\n\t\t\t\t\tdependencyModule = { state: 4 /* executed */, exports: module }\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\trequire._pending++\r\n\t\t\t\t\tconst dependencyURL = require.resolve(dependencyName, baseURL)\r\n\t\t\t\t\tif (dependencyModule = require.cache[dependencyURL]) {\r\n\t\t\t\t\t\trequire._ensure(dependencyModule, dependencyURL)\r\n\t\t\t\t\t\trequire._pending--\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trequire.cache[dependencyURL] = dependencyModule = { state: 1 /* fetching */ }\r\n\t\t\t\t\t\trequire.load(dependencyURL, () => {\r\n\t\t\t\t\t\t\trequire._ensure(dependencyModule, dependencyURL)\r\n\t\t\t\t\t\t\tif (!--require._pending) {\r\n\t\t\t\t\t\t\t\trequire._ready()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t\tdelete require.cache[dependencyURL]\r\n\t\t\t\t\t\t\tdependencyModule.state = 5 /* error */\r\n\t\t\t\t\t\t\tif (!--require._pending) {\r\n\t\t\t\t\t\t\t\trequire._ready()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthrow new Error(`Cannot load module '${dependencyName}' (from '${baseURL || \"<entry>\"}')`)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tdependencies[i] = dependencyModule\r\n\t\t}\r\n\t}\r\n\tif (!require._pending) {\r\n\t\trequire._ready()\r\n\t}\r\n}\r\n\r\n/** 获取正在等待加载的模块数 */\r\nrequire._pending = 0\r\n\r\n/** 当所有模块加载完成后执行 */\r\nrequire._ready = () => {\r\n\tconst entryModule = require._entryModule\r\n\tif (entryModule) {\r\n\t\trequire._entryModule = entryModule.next\r\n\t\tentryModule.next = undefined\r\n\t\ttry {\r\n\t\t\trequire._execute(entryModule)\r\n\t\t} finally {\r\n\t\t\trequire._ready()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/** 当模块及依赖都已加载完成后负责执行指定的模块 */\r\nrequire._execute = module => {\r\n\tif (module.state >= 4 /* executed */) {\r\n\t\treturn\r\n\t}\r\n\tmodule.state = 4 /* executed */\r\n\tconst { dependencies } = module\r\n\tif (dependencies) {\r\n\t\tfor (let i = 0; i < dependencies.length; i++) {\r\n\t\t\tconst dependency = dependencies[i]\r\n\t\t\tif (dependency.state === 5 /* error */) {\r\n\t\t\t\tmodule.state = 5 /* error */\r\n\t\t\t\tif (module.onError) {\r\n\t\t\t\t\tmodule.onError()\r\n\t\t\t\t\tmodule.onError = undefined\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\trequire._execute(dependency)\r\n\t\t\tdependencies[i] = dependency.exports\r\n\t\t}\r\n\t\tmodule.dependencies = undefined\r\n\t}\r\n\tconst define = module.define\r\n\tif (define) {\r\n\t\tconst exports = dependencies ? define(...dependencies) : define()\r\n\t\tif (exports !== undefined) {\r\n\t\t\tmodule.exports = exports\r\n\t\t}\r\n\t\tmodule.define = undefined\r\n\t}\r\n}\r\n\r\n/**\r\n * 解析指定模块名的绝对地址\r\n * @param {string} name 要解析的模块名\r\n * @param {string} [baseURL] 解析使用的基地址\r\n */\r\nrequire.resolve = (name, baseURL) => {\r\n\tif (/^\\.\\.?(\\/|$)/.test(name)) {\r\n\t\tname = (baseURL || require.currentScript()).replace(/[^\\/]*$/, \"\") + name.replace(/^\\.\\//, \"\")\r\n\t} else if (name.charCodeAt(0) === 47 /*/*/) {\r\n\t\tname = `${location.protocol}${name.charCodeAt(1) === 47 /*/*/ ? name : `//${location.host}${name}`}`\r\n\t} else if (!/:\\/\\//.test(name)) {\r\n\t\tname = `${location.protocol}//${location.host}${location.pathname.replace(/\\/[^\\/]*$/, \"/\")}${name}`\r\n\t}\r\n\tlet slashIndex\r\n\twhile ((slashIndex = name.search(/\\/\\.\\.?(\\/|$)/)) >= 0) {\r\n\t\tif (name.charCodeAt(slashIndex + 2) === 46 /*.*/) {\r\n\t\t\tconst left = name.slice(0, name.lastIndexOf(\"/\", slashIndex - 1) + 1)\r\n\t\t\tif (!/^.*:\\/\\/[^/]*\\//.test(left)) {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tname = left + name.slice(slashIndex + 4)\r\n\t\t} else {\r\n\t\t\tname = name.slice(0, slashIndex + 1) + name.slice(slashIndex + 3)\r\n\t\t}\r\n\t}\r\n\treturn name\r\n}\r\n\r\n/** 获取或设置请求模块时在地址后追加的参数 */\r\nrequire.urlArgs = \"\"\r\n\r\n/**\r\n * 底层加载一个模块\r\n * @param {string} url 要加载的地址\r\n * @param {Function} onLoad 加载成功的回调函数\r\n * @param {Function} [onError] 加载失败的回调函数\r\n */\r\nrequire.load = (url, onLoad, onError) => {\r\n\tconst match = /\\.[^\\.\\/\\\\]+$/.exec(url)\r\n\tconst loader = match && require.extensions[match[0].toLowerCase()] || require.extensions[\".js\"]\r\n\tloader(url, onLoad, onError)\r\n}\r\n\r\n/** 获取不同扩展名的载入方式 */\r\nrequire.extensions = {\r\n\t\".js\"(url, onLoad, onError) {\r\n\t\t// 如果浏览器不支持 document.currentScript，使用单线程下载脚本，以便脚本内部可以获取当前路径\r\n\t\tif (require._loadQueue) {\r\n\t\t\tif (require._currentScript) {\r\n\t\t\t\trequire._loadQueue.push({ url, onLoad, onError })\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\trequire._currentScript = url\r\n\t\t}\r\n\t\tconst script = document.createElement(\"script\")\r\n\t\tscript.async = true\r\n\t\tscript.onload = script.onreadystatechange = () => {\r\n\t\t\tconst readyState = script.readyState\r\n\t\t\tif (readyState == undefined || readyState == \"loaded\" || readyState == \"complete\") {\r\n\t\t\t\tscript.onload = script.onreadystatechange = null\r\n\t\t\t\tonLoad()\r\n\t\t\t\tif (require._loadQueue) {\r\n\t\t\t\t\trequire._currentScript = undefined\r\n\t\t\t\t\tconst next = require._loadQueue.shift()\r\n\t\t\t\t\tif (next) {\r\n\t\t\t\t\t\trequire.extensions[\".js\"](next.url, next.onLoad, next.onError)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tscript.onerror = onError\r\n\t\tscript.src = url + require.urlArgs\r\n\t\tconst lastNode = require._lastNode(\"script\")\r\n\t\tlastNode.parentNode.insertBefore(script, lastNode.nextSibling)\r\n\t},\r\n\t\".css\"(url, onLoad, onError) {\r\n\t\tconst link = document.createElement(\"link\")\r\n\t\tlink.rel = \"stylesheet\"\r\n\t\tlink.href = url + require.urlArgs\r\n\t\t// 部分浏览器不支持 link.onload/link.onerror 事件：https://pie.gd/test/script-link-events/\r\n\t\tif (\"onload\" in link) {\r\n\t\t\tlink.onload = onLoad\r\n\t\t} else {\r\n\t\t\tsetTimeout(onLoad, 30)\r\n\t\t}\r\n\t\tlink.onError = onError\r\n\t\tconst lastNode = require._lastNode(\"link\")\r\n\t\tif (lastNode) {\r\n\t\t\tlastNode.parentNode.insertBefore(link, lastNode.nextSibling)\r\n\t\t} else {\r\n\t\t\t(document.head || document.documentElement).appendChild(link)\r\n\t\t}\r\n\t\tdefine(url, () => {\r\n\t\t\tconst lastNode = require._lastNode(\"link\")\r\n\t\t\tlastNode.parentNode.insertBefore(link, lastNode.nextSibling)\r\n\t\t})\r\n\t},\r\n\t\".svg\"(url, onLoad) {\r\n\t\tdefine(url, () => url)\r\n\t\tonLoad()\r\n\t}\r\n}\r\n\".webp.png.ico.jpg.gif.bmp.jpeg.cur.woff2.woff.ttf.eot.amr.mp3.wav.webm.mp4.ogg\".replace(/\\.\\w+/g, ext => {\r\n\trequire.extensions[ext] = require.extensions[\".svg\"]\r\n})\r\n\r\n/** 获取指定类型的最后一个节点 */\r\nrequire._lastNode = tagName => {\r\n\tconst nodes = document.getElementsByTagName(tagName)\r\n\treturn nodes[nodes.length - 1]\r\n}\r\n\r\n/** 获取当前正在执行的脚本的绝对路径 */\r\nrequire.currentScript = () => {\r\n\tif (require._currentScript) {\r\n\t\treturn require._currentScript\r\n\t}\r\n\tconst script = document.currentScript\r\n\tconst src = (script && script.src || location.href).replace(/[?#].*$/, \"\")\r\n\ttry {\r\n\t\treturn decodeURIComponent(src)\r\n\t} catch {\r\n\t\treturn src\r\n\t}\r\n}\r\n\r\nif (!(\"currentScript\" in document)) {\r\n\trequire._loadQueue = []\r\n}\r\n\r\n/**\r\n * 定义一个模块\r\n * @param {string} [name] 模块名\r\n * @param {string[]} [dependencies] 模块的所有依赖项\r\n * @param {any} factory 模块的内容\r\n * @returns 返回定义的模块\r\n */\r\nfunction define(name, dependencies, factory) {\r\n\tif (dependencies === undefined) {\r\n\t\tdependencies = name\r\n\t\tname = require.currentScript()\r\n\t}\r\n\tif (factory === undefined) {\r\n\t\tfactory = dependencies\r\n\t\tif (typeof name === \"string\") {\r\n\t\t\tdependencies = [\"require\", \"exports\", \"module\"]\r\n\t\t} else {\r\n\t\t\tdependencies = name\r\n\t\t\tname = require.currentScript()\r\n\t\t}\r\n\t}\r\n\tconst url = require.resolve(name)\r\n\tconst module = require.cache[url] ||= { state: 1 /* fetching */ }\r\n\tif (module.state < 2 /* fetched */) {\r\n\t\tmodule.state = 2 /* fetched */\r\n\t\tmodule.dependencies = dependencies\r\n\t\tif (typeof factory === \"function\") {\r\n\t\t\tmodule.exports = {}\r\n\t\t\tmodule.define = factory\r\n\t\t} else {\r\n\t\t\tmodule.exports = factory\r\n\t\t}\r\n\t}\r\n\treturn module\r\n}\r\n\r\n/** 判断当前 define 是否实现 AMD 规范 */\r\ndefine.amd = true"]}